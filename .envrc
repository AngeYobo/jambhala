if ! has nix_direnv_version || ! nix_direnv_version 2.2.1; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.2.1/direnvrc" "sha256-zelF0vLbEl5uaqrfIzbgNzJWGmLzCmYAkInj/LNxvKs="
fi

export NIXPKGS_ALLOW_UNFREE=1

use flake . --impure --accept-flake-config

export PROJECT_ROOT=$(git rev-parse --show-toplevel)
export ASSETS_PATH="$PROJECT_ROOT/assets"
export ADDR_PATH="$ASSETS_PATH/addr"
export DATA_PATH="$ASSETS_PATH/data"
export KEYS_PATH="$ASSETS_PATH/keys"
export PARAMS_PATH="$ASSETS_PATH/params.json"
export TX_PATH="$ASSETS_PATH/tx"
export NATIVE_SCRIPTS_PATH="$ASSETS_PATH/scripts/native"
export PLUTUS_SCRIPTS_PATH="$ASSETS_PATH/scripts/plutus"

export PATH=$PATH:./setup:./scripts/:./cardano-cli/

# Fix project if cloned without --recurse-submodules flag:
if [ ! "$(ls -A jambhalucid)" ] || [ ! "$(ls -A cardano-ez-installer)" ]; then
  git submodule update --init --recursive
  git submodule foreach 'git checkout main'
fi

# Create .env file with default environment variables:
if [ ! -f .env ]; then
  touch .env
  echo 'NETWORK=testnet # testnet | mainnet' >> .env
  echo 'NETWORK_MAGIC=2 # Testnet: 1 (preprod) | 2 (preview)' >> .env
  echo 'NODE_RELEASE="1.35.7" # Replace with newer version and re-run the script to update your installation' >> .env
  echo 'CARDANO_SRC_PATH="$HOME/cardano-src" # Where cardano-node source files will be saved' >> .env
  echo 'CARDANO_PATH="$HOME/cardano" # Where node database and config files will be saved' >> .env
  echo "BLOCKFROST_PROJECT_ID_PREPROD=preprodProjectID" >> .env
  echo "BLOCKFROST_PROJECT_ID_PREVIEW=previewProjectID" >> .env
  echo "VIM_MODE=false" >> .env
fi

# Source the .env file:
dotenv

# Additional dynamic environment variables based on .env values:
if [[ $NETWORK -eq "testnet" ]]; then
  export NET="--testnet-magic ${NETWORK_MAGIC}"
  if [[ $NETWORK_MAGIC -eq 1 ]]; then
    export TESTNET="preprod"
  elif [[ $NETWORK_MAGIC -eq 2 ]]; then
    export TESTNET="preview"
  fi
  export CARDANO_NODE_SOCKET_PATH="$CARDANO_PATH/testnet/$TESTNET/node.socket"
elif [[ $NETWORK -eq "mainnet" ]]; then
  export NET="--mainnet"
  export CARDANO_NODE_SOCKET_PATH="$CARDANO_PATH/mainnet/node.socket"
else
  echo "Error: Invalid NETWORK value" >&2
  exit 1
fi

### JAMBHALUCID SETUP ###

# Create .env.local file for Jambhalucid and populate with existing variables
env_local="$PROJECT_ROOT/jambhalucid/.env.local"
if [ ! -f $env_local ]; then
  touch $env_local

  echo "TESTNET_NAME=\$TESTNET" >> $env_local
  echo "BLOCKFROST_PROJECT_ID_PREPROD=\$BLOCKFROST_PROJECT_ID_PREPROD" >> $env_local
  echo "BLOCKFROST_PROJECT_ID_PREVIEW=\$BLOCKFROST_PROJECT_ID_PREVIEW" >> $env_local
fi